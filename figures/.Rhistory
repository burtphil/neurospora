require(ggplot2)
p <- ggplot(data = data.frame(x = 0), mapping = aes(x = x))
interpol <- function(x) x^2 + x
p + stat_function(fun = interpol)
p <- ggplot(data = data.frame(x = 0), mapping = aes(x = x))
interpol <- function(x) -x^2 - 2x
p + stat_function(fun = interpol)
interpol <- function(x) -(x^2) - 2x
require(ggplot2)
p <- ggplot(data = data.frame(x = 0), mapping = aes(x = x))
interpol <- function(x) -(x^2) - 2x + 100
p + stat_function(fun = interpol)
poly <- function(x) {
x^2
}
p <- ggplot(data.frame(x = c(-4, 4)), aes(x = x)) +
stat_function(fun = cubeFun)
p <- ggplot(data.frame(x = c(-4, 4)), aes(x = x)) +
stat_function(fun = poly)
p <- ggplot(data.frame(x = c(-4, 4)), aes(x = x)) +
stat_function(fun = poly)
poly <- function(x) {
x
}
p <- ggplot(data.frame(x = c(-4, 4)), aes(x = x)) +
stat_function(fun = poly)
poly <- function(x) {
x
}
p <- ggplot(data.frame(x = c(-4, 4)), aes(x = x)) +
stat_function(fun = poly)
p <- ggplot(data.frame(x = c(-4, 4)), aes(x = x)) +
stat_function(fun = poly)
print (p)
poly <- function(x) {
-(x-3)^2+5
}
p <- ggplot(data.frame(x = c(-4, 4)), aes(x = x)) +
stat_function(fun = poly)
print (p)
poly <- function(x) {
-2(x-3)^2+5
}
p <- ggplot(data.frame(x = c(0, 8)), aes(x = x)) +
stat_function(fun = poly)
print (p)
poly <- function(x) {
-2*(x-3)^2+5
}
p <- ggplot(data.frame(x = c(0, 8)), aes(x = x)) +
stat_function(fun = poly)
print (p)
poly <- function(x) {
-0.5*x^2+2.5*x-1
}
p <- ggplot(data.frame(x = c(0, 6)), aes(x = x)) +
stat_function(fun = poly)
print (p)
p <- ggplot(data.frame(x = c(0, 6)), aes(x = x)) +
stat_function(fun = poly)+
coord_cartesian(xlim = c(0,5), ylim = c(0,3), expand = TRUE)
print (p)
p <- ggplot(data.frame(x = c(0, 6)), aes(x = x)) +
stat_function(fun = poly)+
coord_cartesian(xlim = c(0,5), ylim = c(0,3), expand = TRUE)+
theme_minimal()
require(ggplot2)
require(ggthemes)
poly <- function(x) {
-0.5*x^2+2.5*x-1
}
p <- ggplot(data.frame(x = c(0, 6)), aes(x = x)) +
stat_function(fun = poly)+
coord_cartesian(xlim = c(0,5), ylim = c(0,3), expand = TRUE)+
theme_minimal()
print (p)
x = c(1,3,4)
y = c(1,2,1)
df = data.frame(x,y)
View(df)
poly <- function(x) {
-0.5*x^2+2.5*x-1
}
x = c(1,3,4)
y = c(1,2,1)
df = data.frame(x,y)
p <- ggplot(data.frame(x = c(0, 6)), aes(x = x)) +
stat_function(fun = poly)+
geom_point(data=df, aes(x=x,y=y), color = "red", size = 2)+
coord_cartesian(xlim = c(0,5), ylim = c(0,3), expand = TRUE)+
theme_minimal()
print (p)
poly(2.5)
xm = 2.5
ym = 2.125
df2 = data.frame(xm,ym)
View(df2)
p <- ggplot(data.frame(x = c(0, 6)), aes(x = x)) +
stat_function(fun = poly)+
geom_point(data=df, aes(x=x,y=y), color = "red", size = 3)+
geom_point(data=df2, aes(x=xm,y=ym) color = "blue", size = 3)+
coord_cartesian(xlim = c(0,5), ylim = c(0,3), expand = TRUE)+
theme_minimal()
print (p)
p <- ggplot(data.frame(x = c(0, 6)), aes(x = x)) +
stat_function(fun = poly)+
geom_point(data=df, aes(x=x,y=y), color = "red", size = 3)+
geom_point(data=df2, aes(x=xm,y=ym) color = "blue", size = 3)+
coord_cartesian(xlim = c(0,5), ylim = c(0,3), expand = TRUE)+
theme_minimal()
print (p)
p <- ggplot(data.frame(x = c(0, 6)), aes(x = x)) +
stat_function(fun = poly)+
geom_point(data=df, aes(x=x,y=y), color = "red", size = 3)+
geom_point(data=df2, aes(x=xm,y=ym), color = "blue", size = 3)+
coord_cartesian(xlim = c(0,5), ylim = c(0,3), expand = TRUE)+
theme_minimal()
print (p)
p <- ggplot(data.frame(x = c(0, 6)), aes(x = x)) +
stat_function(fun = poly)+
geom_point(data=df, aes(x=x,y=y), color = "red", size = 3, solid = F)+
geom_point(data=df2, aes(x=xm,y=ym), color = "blue", size = 3, solid = F)+
coord_cartesian(xlim = c(0,5), ylim = c(0,3), expand = TRUE)+
theme_minimal()
print (p)
p <- ggplot(data.frame(x = c(0, 6)), aes(x = x)) +
stat_function(fun = poly)+
geom_point(data=df, aes(x=x,y=y), color = "red", size = 3)+
geom_point(data=df2, aes(x=xm,y=ym), color = "blue", size = 3)+
scale_shape_discrete(solid=F, legend=F) +
coord_cartesian(xlim = c(0,5), ylim = c(0,3), expand = TRUE)+
theme_minimal()
print (p)
p <- ggplot(data.frame(x = c(0, 6)), aes(x = x)) +
stat_function(fun = poly)+
geom_point(data=df, aes(x=x,y=y), color = "red", size = 3)+
geom_point(data=df2, aes(x=xm,y=ym), color = "blue", size = 3)+
scale_shape_discrete(solid=F) +
coord_cartesian(xlim = c(0,5), ylim = c(0,3), expand = TRUE)+
theme_minimal()
print (p)
p <- ggplot(data.frame(x = c(0, 6)), aes(x = x)) +
stat_function(fun = poly)+
geom_point(data=df, aes(x=x,y=y), color = "red", size = 3)+
geom_point(data=df2, aes(x=xm,y=ym), color = "blue", size = 3)+
scale_shape_discrete(solid=F) +
coord_cartesian(xlim = c(0,5), ylim = c(0,3), expand = TRUE)+
theme_few()
print (p)
f <- ggplot(data.frame(x = c(0, 10)), aes(x))
f + stat_function(fun = sin)
f <- ggplot(data.frame(x = c(0, 10)), aes(x))
f + stat_function(fun = sin)+theme_few()+coord_cartesian(ylim = c(-3,3))
f <- ggplot(data.frame(x = c(0, 10)), aes(x))
f + stat_function(fun = sin)+theme_few()+coord_cartesian(ylim = c(-2,2))
sine <- function(x){
sin(pi*x)
}
f <- ggplot(data.frame(x = c(0, 10)), aes(x))
f + stat_function(fun = sine)+theme_few()+coord_cartesian(ylim = c(-2,2))
f <- ggplot(data.frame(x = c(0, 5)), aes(x))
f + stat_function(fun = sine)+theme_few()+coord_cartesian(ylim = c(-2,2))
a = c(0.5,2.5)
b = c(1,1)
df3 = data.frame(a,b)
View(df3)
a = c(0.5,2.5)
b = c(1,1)
df3 = data.frame(a,b)
f <- ggplot(data.frame(x = c(0, 5)), aes(x))
f + stat_function(fun = sine)+
theme_few()+
coord_cartesian(ylim = c(-2,2))+
geom_point(data = df3, aes(x=a,y=b), color = "blue", size = 3)
f <- ggplot(data.frame(x = c(-1, 5)), aes(x))
f + stat_function(fun = sine)+
theme_few()+
coord_cartesian(ylim = c(-2,2))+geom_hline(yintercept = 0)+
geom_point(data = df3, aes(x=a,y=b), color = "blue", size = 3)
f <- ggplot(data.frame(x = c(0, 4)), aes(x))
f + stat_function(fun = sine)+
theme_few()+
coord_cartesian(ylim = c(-2,2))+geom_hline(yintercept = 0)+
geom_point(data = df3, aes(x=a,y=b), color = "blue", size = 3)
f <- ggplot(data.frame(x = c(-1, 4)), aes(x))
f + stat_function(fun = sine)+
theme_few()+
coord_cartesian(ylim = c(-1.5,1.5),xlim = (0,4))+
geom_hline(yintercept = 0)+
geom_point(data = df3, aes(x=a,y=b), color = "blue", size = 3)
f + stat_function(fun = sine)+
theme_few()+
coord_cartesian(ylim = c(-1.5,1.5),xlim = c(0,4))+
geom_hline(yintercept = 0)+
geom_point(data = df3, aes(x=a,y=b), color = "blue", size = 3)
f <- ggplot(data.frame(x = c(-1, 5)), aes(x))
f + stat_function(fun = sine)+
theme_few()+
coord_cartesian(ylim = c(-1.5,1.5),xlim = c(0,4))+
geom_hline(yintercept = 0)+
geom_point(data = df3, aes(x=a,y=b), color = "blue", size = 3)
f <- ggplot(data.frame(x = c(-1, 5)), aes(x))
f + stat_function(fun = sine)+
theme_few()+
coord_cartesian(ylim = c(-1.5,1.5),xlim = c(0,3.5))+
geom_hline(yintercept = 0)+
geom_point(data = df3, aes(x=a,y=b), color = "blue", size = 3)
p <- ggplot(data.frame(x = c(0, 6)), aes(x = x)) +
stat_function(fun = poly)+
geom_point(data=df, aes(x=x,y=y), color = "red", size = 3)+
geom_point(data=df2, aes(x=xm,y=ym), color = "blue", size = 3)+
scale_shape_discrete(solid=F) +
coord_cartesian(xlim = c(0,5), ylim = c(0,3), expand = TRUE)+
theme_few()
print (p)
### method script illustration of period amplitude and interpolation and phase?
require(ggplot2)
require(ggthemes)
poly <- function(x) {
-0.5*x^2+2.5*x-1
}
sine <- function(x){
sin(pi*x)
}
const <- function(x){
0
}
### define a theme for plotting
size_axis <- element_text(face="bold", size = 30)
size_ticks <- element_text(face="bold", size = 30, color = "black")
size_line <- element_line(color = "black", size = 2)
theme_thesis <- theme_few() +
theme(axis.title = size_axis,
axis.title.y = element_text(margin = margin(0, 0.8, 0, 0, "cm")),
axis.title.x = element_text(margin = margin(0.5, 0, 0, 0, "cm")),
axis.text = size_ticks,
axis.ticks = size_line,
axis.ticks.length=unit(2,"mm"),
panel.border = element_rect(size = 2, color = "black")
)
x = c(1,3,4)
y = c(1,2,1)
xm = 2.5
ym = 2.125
df2 = data.frame(xm,ym)
df = data.frame(x,y)
p <- ggplot(data.frame(x = c(0, 6)), aes(x = x)) +
stat_function(fun = poly)+
geom_point(data=df, aes(x=x,y=y), color = "red", size = 3)+
geom_point(data=df2, aes(x=xm,y=ym), color = "blue", size = 3)+
scale_shape_discrete(solid=F) +
coord_cartesian(xlim = c(0,5), ylim = c(0,3), expand = TRUE)+
theme_thesis()
print (p)
a = c(0.5,2.5)
b = c(1,1)
df3 = data.frame(a,b)
f <- ggplot(data.frame(x = c(-1, 5)), aes(x))
f + stat_function(fun = sine)+
coord_cartesian(ylim = c(-1.5,1.5),xlim = c(0,3.5))+
geom_hline(yintercept = 0)+
geom_point(data = df3, aes(x=a,y=b), color = "blue", size = 3)+
theme_thesis()
theme_thesis <- theme_few() +
theme(axis.title = size_axis,
axis.title.y = element_text(margin = margin(0, 0.8, 0, 0, "cm")),
axis.title.x = element_text(margin = margin(0.5, 0, 0, 0, "cm")),
axis.text = size_ticks,
axis.ticks = size_line,
axis.ticks.length=unit(2,"mm"),
panel.border = element_rect(size = 2, color = "black")
)
p <- ggplot(data.frame(x = c(0, 6)), aes(x = x)) +
stat_function(fun = poly)+
geom_point(data=df, aes(x=x,y=y), color = "red", size = 3)+
geom_point(data=df2, aes(x=xm,y=ym), color = "blue", size = 3)+
scale_shape_discrete(solid=F) +
coord_cartesian(xlim = c(0,5), ylim = c(0,3), expand = TRUE)+
theme_thesis()
print (p)
### method script illustration of period amplitude and interpolation and phase?
require(ggplot2)
require(ggthemes)
poly <- function(x) {
-0.5*x^2+2.5*x-1
}
sine <- function(x){
sin(pi*x)
}
const <- function(x){
0
}
### define a theme for plotting
size_axis <- element_text(face="bold", size = 30)
size_ticks <- element_text(face="bold", size = 30, color = "black")
size_line <- element_line(color = "black", size = 2)
theme_thesis <- theme_few() +
theme(axis.title = size_axis,
axis.title.y = element_text(margin = margin(0, 0.8, 0, 0, "cm")),
axis.title.x = element_text(margin = margin(0.5, 0, 0, 0, "cm")),
axis.text = size_ticks,
axis.ticks = size_line,
axis.ticks.length=unit(2,"mm"),
panel.border = element_rect(size = 2, color = "black")
)
x = c(1,3,4)
y = c(1,2,1)
xm = 2.5
ym = 2.125
df2 = data.frame(xm,ym)
df = data.frame(x,y)
p <- ggplot(data.frame(x = c(0, 6)), aes(x = x)) +
stat_function(fun = poly)+
geom_point(data=df, aes(x=x,y=y), color = "red", size = 3)+
geom_point(data=df2, aes(x=xm,y=ym), color = "blue", size = 3)+
scale_shape_discrete(solid=F) +
coord_cartesian(xlim = c(0,5), ylim = c(0,3), expand = TRUE)+
theme_thesis
print (p)
a = c(0.5,2.5)
b = c(1,1)
df3 = data.frame(a,b)
f <- ggplot(data.frame(x = c(-1, 5)), aes(x))
f + stat_function(fun = sine)+
coord_cartesian(ylim = c(-1.5,1.5),xlim = c(0,3.5))+
geom_hline(yintercept = 0)+
geom_point(data = df3, aes(x=a,y=b), color = "blue", size = 3)+
theme_thesis
p <- ggplot(data.frame(x = c(0, 6)), aes(x = x)) +
stat_function(fun = poly, size = 2)+
geom_point(data=df, aes(x=x,y=y), color = "red", size = 3)+
geom_point(data=df2, aes(x=xm,y=ym), color = "blue", size = 3)+
scale_shape_discrete(solid=F) +
coord_cartesian(xlim = c(0,5), ylim = c(0,3), expand = TRUE)+
theme_thesis
print (p)
p <- ggplot(data.frame(x = c(0, 6)), aes(x = x)) +
stat_function(fun = poly, size = 1.5)+
geom_point(data=df, aes(x=x,y=y), color = "red", size = 4)+
geom_point(data=df2, aes(x=xm,y=ym), color = "blue", size = 4)+
scale_shape_discrete(solid=F) +
coord_cartesian(xlim = c(0,5), ylim = c(0,3), expand = TRUE)+
theme_thesis
print (p)
f <- ggplot(data.frame(x = c(-1, 5)), aes(x))
f + stat_function(fun = sine)+
coord_cartesian(ylim = c(-1.5,1.5),xlim = c(0,3.5))+
geom_hline(yintercept = 0)+
geom_point(data = df3, aes(x=a,y=b), color = "blue", size = 3)+
theme_thesis
f <- ggplot(data.frame(x = c(-1, 5)), aes(x))
f + stat_function(fun = sine, size =1.5)+
coord_cartesian(ylim = c(-1.5,1.5),xlim = c(0,3.5))+
geom_hline(yintercept = 0, size =1.5)+
geom_point(data = df3, aes(x=a,y=b), color = "blue", size = 3)+
theme_thesis
p <- ggplot(data.frame(x = c(0, 6)), aes(x = x)) +
stat_function(fun = poly, size = 1.2)+
geom_point(data=df, aes(x=x,y=y), color = "red", size = 4)+
geom_point(data=df2, aes(x=xm,y=ym), color = "blue", size = 4)+
scale_shape_discrete(solid=F) +
coord_cartesian(xlim = c(0,5), ylim = c(0,3), expand = TRUE)+
theme_thesis
print (p)
a = c(0.5,2.5)
b = c(1,1)
df3 = data.frame(a,b)
f <- ggplot(data.frame(x = c(-1, 5)), aes(x))
f + stat_function(fun = sine, size =1.2)+
coord_cartesian(ylim = c(-1.5,1.5),xlim = c(0,3.5))+
geom_hline(yintercept = 0, size =1.2)+
geom_point(data = df3, aes(x=a,y=b), color = "red", size = 4)+
theme_thesis
f + stat_function(fun = sine, size =1.2)+
coord_cartesian(ylim = c(-1.5,1.5),xlim = c(0,3.5))+
geom_hline(yintercept = 0, size =1.2)+
geom_point(data = df3, aes(x=a,y=b), color = "red",fill = "white", size = 4)+
theme_thesis
f <- ggplot(data.frame(x = c(-1, 5)), aes(x))
f + stat_function(fun = sine, size =1.2)+
coord_cartesian(ylim = c(-1.5,1.5),xlim = c(0,3.5))+
geom_hline(yintercept = 0, size =1.2)+
geom_point(data = df3, aes(x=a,y=b), color = "red",fill = "black", size = 4)+
theme_thesis
print(f)
f + stat_function(fun = sine, size =1.2)+
coord_cartesian(ylim = c(-1.5,1.5),xlim = c(0,3.5))+
geom_hline(yintercept = 0, size =1.2)+
geom_point(data = df3, aes(x=a,y=b), color = "red", size = 4)+
theme_thesis
f + stat_function(fun = sine, size =1.2)+
coord_cartesian(ylim = c(-1.5,1.5),xlim = c(0,3.5))+
geom_hline(yintercept = 0, size =1.2)+
geom_point(data = df3, aes(x=a,y=b), color = "red",fill = "black", size = 4)+
theme_thesis
f + stat_function(fun = sine, size =1.2)+
coord_cartesian(ylim = c(-1.5,1.5),xlim = c(0,3.5))+
geom_hline(yintercept = 0, size =1.2)+
geom_point(data = df3, aes(x=a,y=b), color = "red",shape = 0, size = 4)+
theme_thesis
f + stat_function(fun = sine, size =1.2)+
coord_cartesian(ylim = c(-1.5,1.5),xlim = c(0,3.5))+
geom_hline(yintercept = 0, size =1.2)+
geom_point(data = df3, aes(x=a,y=b), color = "red",shape = 1, size = 4)+
theme_thesis
f + stat_function(fun = sine, size =1.2)+
coord_cartesian(ylim = c(-1.5,1.5),xlim = c(0,3.5))+
geom_hline(yintercept = 0, size =1.2)+
geom_point(data = df3, aes(x=a,y=b), color = "red",shape = o, size = 4)+
theme_thesis
f + stat_function(fun = sine, size =1.2)+
coord_cartesian(ylim = c(-1.5,1.5),xlim = c(0,3.5))+
geom_hline(yintercept = 0, size =1.2)+
geom_point(data = df3, aes(x=a,y=b), color = "red",pch= o, size = 4)+
theme_thesis
f <- ggplot(data.frame(x = c(-1, 5)), aes(x))
f + stat_function(fun = sine, size =1.2)+
coord_cartesian(ylim = c(-1.5,1.5),xlim = c(0,3.5))+
geom_hline(yintercept = 0, size =1.2)+
geom_point(data = df3, aes(x=a,y=b), fill = "red", size = 4)+
theme_thesis
f <- ggplot(data.frame(x = c(-1, 5)), aes(x))
f + stat_function(fun = sine, size =1.2)+
coord_cartesian(ylim = c(-1.5,1.5),xlim = c(0,3.5))+
geom_hline(yintercept = 0, size =1.2)+
geom_point(data = df3, aes(x=a,y=b, fill = "red"), size = 4)+
theme_thesis
f + stat_function(fun = sine, size =1.2)+
coord_cartesian(ylim = c(-1.5,1.5),xlim = c(0,3.5))+
geom_hline(yintercept = 0, size =1.2)+
geom_point(data = df3, aes(x=a,y=b), color = "red",shape = 1, size = 4)+
theme_thesis
f <- ggplot(data.frame(x = c(-1, 5)), aes(x))
f + stat_function(fun = sine, size =1.2)+
coord_cartesian(ylim = c(-1.5,1.5),xlim = c(0,3.5))+
geom_hline(yintercept = 0, size =1.2)+
geom_point(data = df3, aes(x=a,y=b), color = "red", size = 4)+
theme_thesis
p <- ggplot(data.frame(x = c(0, 6)), aes(x = x)) +
stat_function(fun = poly, size = 1.2)+
geom_point(data=df, aes(x=x,y=y), color = "red", size = 4)+
geom_point(data=df2, aes(x=xm,y=ym), color = "blue", size = 4)+
scale_shape_discrete(solid=F) +
coord_cartesian(xlim = c(0,5), ylim = c(0,3), expand = TRUE)+
theme_thesis
print (p)
f + stat_function(fun = sine, size =1.2)+
coord_cartesian(ylim = c(-1.5,1.5),xlim = c(0,3.2))+
geom_hline(yintercept = 0, size =1.2)+
geom_point(data = df3, aes(x=a,y=b), color = "red", size = 4)+
theme_thesis
require(ggplot2)
source('~/neurospora/methods_illustration.R', echo=TRUE)
source('~/neurospora/methods_illustration.R', echo=TRUE)
